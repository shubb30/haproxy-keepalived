global
    stats timeout 30s
    daemon
    maxconn 2048
    ssl-server-verify none

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    mode    http
    option  httplog
    option  dontlognull
        option redispatch
        option forwardfor
        timeout connect 5000
        timeout client  900000
        timeout server  900000
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend <<SERVICE_1>>-https
    mode http
        bind <<IP_ADDRESS_1 >>:443 ssl crt /usr/local/etc/haproxy/ssl/private/<<SERVICE_1>>.pem
        reqadd X-Forwarded-Proto:\ https
        default_backend SERVICE_1-backend

        http-request set-header X-Forwarded-Proto https if { ssl_fc }
        http-request set-header X-Forwarded-Ssl on if { ssl_fc }

backend SERVICE_1-backend
    redirect scheme https if !{ ssl_fc }
    server <<SERVICE_1>> <<SERVICE_1>>.<<STACK_1>>.rancher.internal:80 check

frontend <<SERVICE_2>>-https
    mode http
        bind <<IP_ADDRESS_2 >>:443 ssl crt /usr/local/etc/haproxy/ssl/private/<<SERVICE_2>>.pem
        reqadd X-Forwarded-Proto:\ https
        default_backend <<SERVICE_2>>-backend

        http-request set-header X-Forwarded-Proto https if { ssl_fc }
        http-request set-header X-Forwarded-Ssl on if { ssl_fc }

backend <<SERVICE_2>>-backend
    redirect scheme https if !{ ssl_fc }
    server <<SERVICE_2>> <<SERVICE_2>>.<<STACK_2>>.rancher.internal:80 check